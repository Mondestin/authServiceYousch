version: '3.8'

services:
  # MySQL database
  mysql:
    image: mysql:8.0
    container_name: auth_service_mysql
    environment:
      MYSQL_DATABASE: auth_db
      MYSQL_USER: auth_user
      MYSQL_PASSWORD: auth_password
      MYSQL_ROOT_PASSWORD: root_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "auth_user", "-p$$MYSQL_PASSWORD"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - auth_network

  # Redis for session management
  redis:
    image: redis:7-alpine
    container_name: auth_service_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - auth_network

  # Auth Service
  auth_service:
    build: .
    container_name: auth_service
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=mysql://auth_user:auth_password@mysql:3306/auth_db
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=your-super-secret-key-here-change-in-production
      - DEBUG=true
      - LOG_LEVEL=DEBUG
      - ENVIRONMENT=development
    volumes:
      - ./logs:/app/logs
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - auth_network
    restart: unless-stopped

volumes:
  mysql_data:
  redis_data:

networks:
  auth_network:
    driver: bridge 